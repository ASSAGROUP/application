version: "3"

vars:
  GREETING: Hello, Application Developer!

tasks:
    default:
        cmds:
        - echo "{{.GREETING}}"
        silent: true


    build-tools:
        desc: Build the software tools for build, release of Bhojpur GUI applications
        cmds:
        - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 GOFLAGS=-mod=mod go build -o bin/appctl client.go 
        - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 GOFLAGS=-mod=mod go build -o bin/appsvr cmd/appsvr/main.go 
        - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 GOFLAGS=-mod=mod go build -o bin/injector cmd/injector/main.go 
        - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 GOFLAGS=-mod=mod go build -o bin/operator cmd/operator/main.go 
        - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 GOFLAGS=-mod=mod go build -o bin/placement cmd/placement/main.go 
        - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 GOFLAGS=-mod=mod go build -o bin/sentry cmd/sentry/main.go
        - chmod 755 ./bin/appctl ./bin/appsvr ./bin/injector ./bin/operator ./bin/placement ./bin/sentry
        - cp ./bin/appctl $GOPATH/bin
        - cp ./bin/appsvr $GOPATH/bin

    build-web:
        desc: Build the web application
        cmds:
        - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 GOFLAGS=-mod=mod go build -o bin/appctl client.go
        # - CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 GOFLAGS=-mod=mod go build -o bin/appsvr server.go 
        - GOFLAGS=-mod=mod go generate ./pkg/webui/...

    build-darwin:
        desc: Build the desktop application for current OS
        cmds:
        - guiutl package -name "Bhojpur Application" -os darwin -icon internal/Icon.png

    build-linux:
        desc: Build the desktop application for current OS
        cmds:
        - guiutl package -name "Bhojpur Application" -os linux -icon internal/Icon.png

    build-windows:
        desc: Build the desktop application for current OS
        cmds:
        - guiutl package -name "Bhojpur Application" -os windows -icon internal/Icon.png

    package-android:
        desc: Package the mobile application for Android
        cmds:
        - guiutl package -os android -appID net.bhojpur.application -icon internal/Icon.png

    package-ios:
        desc: Package the mobile application for iOS
        cmds:
        - guiutl package -os ios -appID net.bhojpur.application -icon internal/Icon.png

    release-macos:
        desc: Release the native application for macOS App Store
        cmds:
        - guiutl release -appID net.bhojpur.application -appVersion 1.0 -appBuild 1 -category business

    release-android:
        desc: Release the mobile application for Google Play
        cmds:
        - guiutl release -os android -appID net.bhojpur.application -appVersion 1.0 -appBuild 1

    release-ios:
        desc: Release the mobile application for iOS App Store
        cmds:
        - guiutl release -os ios -appID net.bhojpur.application -appVersion 1.0 -appBuild 1

    run-web-server:
        desc: Run the web server application from source code
        cmds:
        - GOFLAGS=-mod=mod go run server.go
 
    run-web-client:
        desc: Run the web client application from source code
        cmds:
        - GOFLAGS=-mod=mod go run client.go

    run-mobile:
        desc: Run the mobile client application on emulator
        cmds:
        - GOFLAGS=-mod=mod go run -tags mobile native/main.go

    run-desktop: 
        desc: Run the desktop application on local host
        cmds:
        - GOFLAGS=-mod=mod go run native/main.go

    generate:
        desc: Generate Go source code from Protool Buffers
        cmds:
        - protoc --go_out=plugins=grpc:. --go_opt=paths=source_relative pkg/api/v1/application.proto
        - protoc --go_out=plugins=grpc:. --go_opt=paths=source_relative pkg/api/v1/application-ui.proto

    test:
        desc: Execute all the Unit Tests
        cmds:
        - gotestsum --junitfile test-results/unit-tests.xml -- -short -race -cover -coverprofile test-results/cover.out ./...

    swagger.gen:
        desc: Generate Go code
        cmds:
        - GOFLAGS=-mod=mod go generate bhojpur.net/application/internal bhojpur.net/application/pkg/swagger

    swagger.validate:
        desc: Validate all the Swagger API specifications
        cmds:
        - swagger validate pkg/swagger/swagger.yml

    swagger.doc:
        desc: Generate documentation for Swagger specified APIs
        cmds:
        - docker run -i yousan/swagger-yaml-to-html < pkg/swagger/swagger.yml > doc/index.html